@startuml
package Data {

  class "SingleLayer (SL)" as sl << package Core >> {
  }

  abstract class "DataSet (DS)" as ds {
    version* : enum
    remarks: string
    void unique(ref<sl>, version)
  }

  note left
    Gueltige Werte
    der enum "version":
    - current
    - previous
    - next
  end note

  class "PostgresDS" as pds {
    tablename* : string
    cat_sync_stamp* : datetime
    inDataServices* : bool
    idField : string
    whereClause : string
  }

  class "PostgresDB" as pdb {
    host* : string
    port* : int
    dbName* : string
  }

  class "Attribute" as attr {
    name* : string
    sort* : int
    cat_synced* : bool
    alias : string
    description : string
    wgc_format : string
    json_displayprops: string
    jinja_template: string
  }

  class "VectorDS" as vds {
    def_transparency* : int
    qml_content* : string
    geom_column : string
  }

  class "RasterDS" as rds {
    def_transparency* : int
    filepath* : string
  }

  class "PostgresSchema" as pgs {
    schemaName* : string
    modelUrl : url
    modelName : string
  }

  ds <|-- rds
  ds <|-- pds
  pds <|-- vds

  sl "1" *-- "1..3" ds

  pds "1..*" --* "1" pgs
  pds "1" *-- "0..*" attr

  pgs "1..*" --* "1" pdb
}
@enduml